#!/bin/bash

shopt -s compat42
[ ! "$TAB" ] && TAB="   "

ini.parser ()
{
    SAVED_IFS=$IFS
    # ini="$(<$1)"                # read the file
    ini=$(cat $1 \
	| sed "s/[[:blank:]]*=[[:blank:]]*/=/g" \
	| sed "s/^[[:blank:]]*;.*//" \
	| sed "s/;[[:blank:]]*$//" \
	| sed "s/;/%%SEMICOLON%%/g" \
	| egrep -v "^[[:blank:]]*;//" \
	| sed "s/^[[:blank:]]*$//" \
	| sed "s/\([{\\$]\)/\\\\\1/g" \
	| sed "s/=\([^\"].*[|{}\\$].*\)\"*$/=\"\\1\"/g"
    )
    ini="${ini//[/\[}"          # escape [
    ini="${ini//]/\]}"          # escape ]
    IFS=$'\n' && ini=( ${ini} ) # convert to line-array
    ini=( ${ini[*]//;*/} )      # remove comments with ;
    ini=( ${ini[*]/\    =/=} )  # remove tabs before =
    ini=( ${ini[*]/=\   /=} )   # remove tabs be =
    ini=( ${ini[*]/\ =\ /=} )   # remove anything with a space around =
    ini=( ${ini[*]/#\\[/\}$'\n'ini.section.} ) # set section prefix
    ini=( ${ini[*]/%\\]/ \(} )    # convert text2function (1)
    ini=( ${ini[*]/=/=\(} )    # convert item to array
    ini=( ${ini[*]/%/ \)} )     # close array parenthesis
    ini=( ${ini[*]/%\\ \)/ \\} ) # the multiline trick
    ini=( ${ini[*]/%\( \)/\(\) \{} ) # convert text2function (2)
    ini=( ${ini[*]/%\} \)/\}} ) # remove extra parenthesis
    ini[0]="" # remove first element
    ini[${#ini[*]} + 1]='}'    # add the last brace
#    eval "$(echo "${ini[*]}")" # eval the result
    eval "$(echo "${ini[*]}" | sed -e 's/\\$\\{/\\\${/g' -e 's/%%SEMICOLON%%/;/g')"
    IFS=$OLDIFS
}
ini_parser_saved()
{
    ini="$(<$1)"                # read the file
    ini="${ini//[/\[}"          # escape [
    ini="${ini//]/\]}"          # escape ]
    IFS=$'\n' && ini=( ${ini} ) # convert to line-array
    ini=( ${ini[*]//;*/} )      # remove comments with ;
    ini=( ${ini[*]/\    =/=} )  # remove tabs before =
    ini=( ${ini[*]/=\    /=} )   # remove tabs be =
    ini=( ${ini[*]/\ =\ /=} )   # remove anything with a space around =
    ini=( ${ini[*]/#\\[/\}$'\n'ini.section.} ) # set section prefix
    ini=( ${ini[*]/%\\]/\(\) \{} )    # convert text2function (1)
    ini=( ${ini[*]/=/=\( } )    # convert item to array
    ini=( ${ini[*]/%/ \)} )     # close array parenthesis
    ini=( ${ini[*]/%\\ \)/ \\} ) # the multiline trick
    ini=( ${ini[*]/%\( \)/\(\) \{} ) # convert text2function (2)
    ini=( ${ini[*]/%\} \)/\}} ) # remove extra parenthesis
    ini[0]="" # remove first element
    ini[${#ini[*]} + 1]='}'    # add the last brace
    eval "$(echo "${ini[*]}")" # eval the result
    IFS=$SAVED_IFS
}

ini.writer ()
{
    SAVED_IFS=$IFS
    IFS=' '$'\n'
    fun="$(declare -F)"
    fun="${fun//declare -f/}"
    tmp=$(mktemp)
    for f in $fun; do
        [ "${f#ini.section}" == "${f}" ] && continue
	[ "$1" ] && [ "$f" != "ini.section.$1" ] && continue
#        item="$(declare -f ${f})"
        item="$(declare -f ${f} | sed 's/\\${.*}/BRACE/g')"
        item="${item##*[^\\]\{}"
        item="${item%\}}"
#        item="${item//=*;/}"
#        vars="${item//=*/}"
 	vars="$item"
        echo "[${f#ini.section.}]"
	for var in $vars; do
	    echo "$var" | grep -q "=" || continue
	    var="${var%=*}"
            echo "$TAB"$var=\"${!var}\" | grep -v ');*=""'
        done | sed 's/${/$\\{/g' > $tmp
	eval $f 2>/dev/null
	. $tmp
	rm -f $tmp
        for var in $vars; do
	    echo "$var" | grep -q "=" || continue
	    var="${var%=*}"
            echo "$TAB"$var = \"${!var}\" | grep -v ');*=""'
        done | sed "s/\$\\\{/$\{/"
# | sed "s/found/relost" | sed "s/\\\([|{}\\$]\)/\\1/g"
	echo
    done
    IFS=$SAVED_IFS
}

# parse the config file called 'myfile.ini', with the following
# contents::
#   [sec2]
#   var2='something'
# ini.parser 'myfile.ini'
 
# enable section called 'sec2' (in the file [sec2]) for reading
# ini.section.sec2
 
# read the content of the variable called 'var2' (in the file
# var2=XXX). If your var2 is an array, then you can use
# ${var[index]}
# echo "$var2"
